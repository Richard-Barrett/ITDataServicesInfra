ls
cd k8s-examples/
git status
ls install/
cd ..
ls -ltra
cat .install.log 
kubectl get pod -n kube-system 
kubectl get node 
kubectl get node -o wide
kubectl version
cat .vlab 
cat /etc/kubernetes/kubelet.conf
sudo cat /etc/kubernetes/kubelet.conf
getenforce
pwd
sudo cp /etc/kubernetes/manifests/kube-apiserver.yaml .
vi kube-apiserver.yaml
sudo vi kube-apiserver.yaml
sudo cp kube-apiserver.yaml kube-apiserver.yaml.bak
sudo vi kube-apiserver.yaml
cd 
cd k8s-examples/security/
ls
cd k8s-user/
ls
kubectl create namespace development
ls
vi developer-role.yaml 
kubectl create -f developer-role.yaml
kubectl create -f developer-role-binding.yaml
kubectl describe rolebinding "developer-binding"
kubectl describe rolebinding developer-binding
vi developer-role-binding.yaml
kubectl create -f developer-role-binding.yaml
kubectl describe rolebinding developer-binding
kubectl describe -n development rolebinding developer-binding
kubectl get -n development rolebinding developer-binding -o yaml
kubectl get role developer
kubectl get clusterrole developer
openssl genrsa -out alice.key 2048
ls
git status
openssl req -new -key alice.key -out alice.csr -subj "/CN=alice/O=mirantis/O=developers"
git status
vi cert-csr.yaml
mkdir server
ls
mv openssl.conf server/
cp cert-csr.yaml server/
cd server/
cat cert-csr.yaml 
mv cert-csr.yaml server-csr.yaml
vi server-csr.yaml 
cat server-csr.yaml 
ls
cat openssl.conf 
openssl req -new -config openssl.conf -out server.csr -keyout server.key
ls -ltr
vi server-csr.yaml 
cat server-csr.yaml | kubectl create -f -
cat server-csr.yaml
cat <<EOF
apiVersion: certificates.k8s.io/v1beta1
kind: CertificateSigningRequest
metadata:
  name: server_csr
spec:
  groups:
  - system:authenticated
  request: $(cat server.csr | base64 | tr -d '\n')
  usages:
  - digital signature
  - key encipherment
  - server auth
EOF

cat <<EOF > server-csr.yaml
apiVersion: certificates.k8s.io/v1beta1
kind: CertificateSigningRequest
metadata:
  name: server_csr
spec:
  groups:
  - system:authenticated
  request: $(cat server.csr | base64 | tr -d '\n')
  usages:
  - digital signature
  - key encipherment
  - server auth

EOF

ls -ltr
vi server-csr.yaml 
kubectl create -f server-csr.yaml 
kubectl get csr server_csr
kubectl get csr server_csr -o yaml
kubectl certificate approve server_csr
kubectl get csr server_csr -o jsonpath='{.status.certificate}' | base64 -d > server.crt
ls -ltr
less server.crt 
openssl x509 -in certificate.crt -text -noout
openssl x509 -in server.crt -text -noout
ls
cd ..
ls
mkdir alice
cat alice.txt 
ls
cd alice/
cp ../server/openssl.conf .
vi openssl.conf 
openssl req -new -config openssl.conf -out alice.csr -keyout alice.key
ls -ltr
%
openssl req -new -config openssl.conf -out alice.csr -keyout alice.key
ls -ltr
ls -l ..
ls ..
ls ../server/
vi user-csr.yaml.in
ls
certname=alice
ls
cat user-csr.yaml.in 
cat <<EOF > user-csr.yaml
apiVersion: certificates.k8s.io/v1beta1
kind: CertificateSigningRequest
metadata:
  name: ${certname}_csr
spec:
  groups:
  - system:authenticated
  request: $(cat ${certname}.csr | base64 | tr -d '\n')
  usages:
  - digital signature
  - key encipherment
  - client auth
EOF

ls -ltr
cat user-csr.yaml
history -a
su - alice
vi ~/.bash_history 
kubectl create -f user-csr.yaml 
%
kubectl get csr
%
kubectl get csr alice_csr -o yaml
%
kubectl certificate approve alice_csr
%
kubectl get csr alice_csr -o jsonpath='{.status.certificate}' | base64 -d > alice.crt
ls -ltr
%
openssl x509 -in alice.crt -text -noout
openssl x509 -in alice.crt -text alice.out
openssl x509 -in alice.crt -text -out alice.out
ls -ltr
less alice.out 
rm alice.out
openssl x509 -in alice.crt -text -nooutsudo useradd -b /home -m -s /bin/bash -c "I work here" alice
sudo useradd -b /home -m -s /bin/bash -c "I work here" alice
sudo passwd alice
ls
sudo mkdir ~alice/keys
cp alice.key alice.crt ~alice/keys
sudo cp alice.key alice.crt ~alice/keys
sudo chmod 400 ~alice/keys/* && sudo chown -R alice:alice ~alice/keys
ls
sudo cp /etc/kubernetes/pki/ca.crt ..
sudo cp ../ca.crt ~alice/keys/
sudo chmod 400 ~alice/keys/* && sudo chown -R alice:alice ~alice/keys
kubectl cluster-info 
ls
cd ..
ls
vi developer-role-binding.yaml 
kubectl get rolebinding 
kubectl get rolebinding -n development 
kubectl delete -n development rolebinding developer-binding 
kubectl create -f developer-role-binding.yaml 
history -a
%
jobs
%
kubectl explain csr
kubectl explain csr.soec
kubectl explain csr.spec
history
history -a
cd k8s-examples/
grep url .git/config 
cd security/k8s-net-policy/
ls
cat developer-role.yaml 
vi developer-role.yaml 
kubectl apply developer-role.yaml 
kubectl apply -f developer-role.yaml 
vi developer-role.yaml 
kubectl apply -f developer-role.yaml 
git status
cd ..
git status
git add .
git status
git pull
git status
git branch --all
git checkout psp
git status
git commit -m "change user creation"
git config --global user.email rroodsari@mirantis.com
git config --global user.name "Reza Roodsari"
git commit -m "change user creation"
git push
pushd ~
ls
ls -ltr
cat .vlab 
vi ~/.bash_history 
history -a
